# base.sap Copyright 2014 John F. Miller

__initialize()

class Module <- Class
  nil

load "lib/base/Array.sap"

# the require method

Directory::required = [Directory.canonical "lib/base/Array.sap"]

module System
  def require(file)
    file = Directory.canonical file
    if (Directory::required.include? file).not
        Directory::required.push! file
        load file
        true
      else
        false

class Object
  include System

  def nil?
    false
  def is_function?
    false
  def "!="(b)
    (self == b).not
#end class Object

require "lib/base/Number.sap"
require "lib/base/Hash.sap"
require "lib/base/Error.sap"

class Function
  def is_function?
    true

class NilClass
  def to_s
    "nil"

  def not
    true

  def nil?
    true
  
  def method_missing (meth, args)
    Error.new("MethodMissing", "the method #{meth} hit nil", args)

class String
  def to_s
    @__value

class Function
  def builtin?
    true




