TIdentifier String
TInteger Integer
TFloat Real
TClass
TModule
TSymbol
TCode CodeBlock
TOpenParen
TCloseParen
TSingleQuote
TDoubleQuote
TComma
TAsign
TIVar String
TGlobal String
TAtom String
TColon
TIf
TThen
TElse
TFor
TDo
TNil
TReturn
TDef
TBegin
TEnd
TTerm


--AST

type AST = [Statment]

data Code = Block CodeBlock | Tree AST | Empty 

Date Statment =
    Class (Maybe String) (Maybe String) (Maybe Expression) Code
  | Module String Code
  | Def String Function
  | Exp Expression
  | Cond Expression Statment (Maybe Statment)
  | Case Expression [(Expression, Statement)]
  | Return Expression
  | Asign LHS Statemnet  -- a = 5 + b --> LHS = a; Expression = 5 + b


data Expression
  | Call Bool (Maybe Expression) String [Expression] --async?; Object; method/funct name; params; function blocks are sugar added to params
  | Funct Function -- e.g lambda x -> x+2 or from function blocks
  | Ident String
  | BinOp String Expression Expression
  | UnOp String Expression
  | Index Expression Expression
  | Atom String
  | EInteger Integer
  | EReal Double
  | ENil
  | StringLiteral

data Function = Function Params Code

data Value =
  | VInteger Integer
  | VDouble Double
  | VNil
  | VString ??
  | VPID PID
  | VObject Object
  | VFunct Function
  | VArray ??
  | VHash ??
  | VAtom String

